# ===================================================================
# Spring Boot configuration for the "dev" profile.
#
# This configuration overrides the application.yml file.
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

spring:
    devtools:
        restart:
            enabled: true
        livereload:
            enabled: false
    lmyDataSource:
        druid:
            url: jdbc:mysql://localhost:3306/lmy_test_database?useUnicode=true&characterEncoding=UTF-8
            username: root
            password: 123456
            type: com.alibaba.druid.pool.DruidDataSource
            initialSize: 100
            maxActive: 300
            minIdle: 5
            #获取连接等待超时的时间
            maxWait: 600000
            #超过时间限制是否回收
            removeAbandoned: true
            #超过时间限制多长
            removeAbandonedTimeout: 180
            #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
            timeBetweenEvictionRunsMillis: 600000
            #配置一个连接在池中最小生存的时间，单位是毫秒
            minEvictableIdleTimeMillis: 300000
            #用来检测连接是否有效的sql，要求是一个查询语句
            validationQuery: SELECT 1 FROM DUAL
            #申请连接的时候检测
            testWhileIdle: true
            #申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能
            testOnBorrow: false
            #归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能
            testOnReturn: false
            #打开PSCache，并且指定每个连接上PSCache的大小
            poolPreparedStatements: true
            maxPoolPreparedStatementPerConnectionSize: 50
            #属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
            #监控统计用的filter:stat 日志用的filter:log4j 防御SQL注入的filter:wall
            filters: stat
    merchantDataSource:
        druid:
#            url: jdbc:mysql://172.19.6.82/merchant?useUnicode=true&characterEncoding=utf-8
#            username: root
#            password: 123456
            url: jdbc:mysql://rm-bp1rc23s40ss8j9lwo.mysql.rds.aliyuncs.com:3306/01merchant?useUnicode=true&characterEncoding=utf-8
            username: user_test
            password: pmn4FIBzkaRsSIqQ
            type: com.alibaba.druid.pool.DruidDataSource
            initialSize: 100
            maxActive: 300
            minIdle: 5
            #获取连接等待超时的时间
            maxWait: 600000
            #超过时间限制是否回收
            removeAbandoned: true
            #超过时间限制多长
            removeAbandonedTimeout: 180
            #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
            timeBetweenEvictionRunsMillis: 600000
            #配置一个连接在池中最小生存的时间，单位是毫秒
            minEvictableIdleTimeMillis: 300000
            #用来检测连接是否有效的sql，要求是一个查询语句
            validationQuery: SELECT 1 FROM DUAL
            #申请连接的时候检测
            testWhileIdle: true
            #申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能
            testOnBorrow: false
            #归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能
            testOnReturn: false
            #打开PSCache，并且指定每个连接上PSCache的大小
            poolPreparedStatements: true
            maxPoolPreparedStatementPerConnectionSize: 50
            #属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
            #监控统计用的filter:stat 日志用的filter:log4j 防御SQL注入的filter:wall
            filters: stat
    cmsDataSource:
        druid:
#            url: jdbc:mysql://172.19.6.82/merchant?useUnicode=true&characterEncoding=utf-8
#            username: root
#            password: 123456
            url: jdbc:mysql://rm-bp1rc23s40ss8j9lwo.mysql.rds.aliyuncs.com:3306/01cmssystem?useUnicode=true&characterEncoding=utf-8
            username: user_test
            password: pmn4FIBzkaRsSIqQ
            type: com.alibaba.druid.pool.DruidDataSource
            initialSize: 100
            maxActive: 300
            minIdle: 5
            #获取连接等待超时的时间
            maxWait: 600000
            #超过时间限制是否回收
            removeAbandoned: true
            #超过时间限制多长
            removeAbandonedTimeout: 180
            #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
            timeBetweenEvictionRunsMillis: 600000
            #配置一个连接在池中最小生存的时间，单位是毫秒
            minEvictableIdleTimeMillis: 300000
            #用来检测连接是否有效的sql，要求是一个查询语句
            validationQuery: SELECT 1 FROM DUAL
            #申请连接的时候检测
            testWhileIdle: true
            #申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能
            testOnBorrow: false
            #归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能
            testOnReturn: false
            #打开PSCache，并且指定每个连接上PSCache的大小
            poolPreparedStatements: true
            maxPoolPreparedStatementPerConnectionSize: 50
            #属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
            #监控统计用的filter:stat 日志用的filter:log4j 防御SQL注入的filter:wall
            filters: stat
    lightningcashDataSource:
        druid:
            url: jdbc:mysql://rm-bp1rc23s40ss8j9lwo.mysql.rds.aliyuncs.com:3306/01lightningcash?useUnicode=true&characterEncoding=UTF-8
            username: user_test
            password: pmn4FIBzkaRsSIqQ
            type: com.alibaba.druid.pool.DruidDataSource
            initialSize: 100
            maxActive: 300
            minIdle: 5
            #获取连接等待超时的时间
            maxWait: 600000
            #超过时间限制是否回收
            removeAbandoned: true
            #超过时间限制多长
            removeAbandonedTimeout: 180
            #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
            timeBetweenEvictionRunsMillis: 600000
            #配置一个连接在池中最小生存的时间，单位是毫秒
            minEvictableIdleTimeMillis: 300000
            #用来检测连接是否有效的sql，要求是一个查询语句
            validationQuery: SELECT 1 FROM DUAL
            #申请连接的时候检测
            testWhileIdle: true
            #申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能
            testOnBorrow: false
            #归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能
            testOnReturn: false
            #打开PSCache，并且指定每个连接上PSCache的大小
            poolPreparedStatements: true
            maxPoolPreparedStatementPerConnectionSize: 50
            #属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
            #监控统计用的filter:stat 日志用的filter:log4j 防御SQL注入的filter:wall
            filters: stat
    redis:
        password: fqdoemuQiOVz
        pool:
              maxActive: 300
              maxIdle: 100
        host: 120.55.44.90
        port: 6379


